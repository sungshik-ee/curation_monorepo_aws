{"version":3,"file":"main.c35afed834a5103ce883.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AAQA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAFA;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;AAAA;AAEA;AAFA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAUA;AAAA;AACA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AAEA;AAUA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAFA;;AAIA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AAgBA;AACA;AACA;AACA;AAHA","sources":["webpack://@DanbiEduCorp/ui/./stories/buttons/Button.stories.tsx","webpack://@DanbiEduCorp/ui/./stories/buttons/Button.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport {Button} from \\\"./Button\\\";\\nimport {ComponentMeta, ComponentStory} from \\\"@storybook/react\\\";\\nimport { within, userEvent } from \\\"@storybook/testing-library\\\";\\nimport { expect } from \\\"@storybook/jest\\\"\\n\\nexport default {\\n    title: 'Button/Default',\\n    component: Button,\\n    argTypes: {\\n        onClick: {action: \\\"clicked\\\"}\\n    }\\n} as ComponentMeta<typeof Button>\\n\\nconst Template : ComponentStory<typeof Button> = (args) => <Button {...args} />\\nexport const RED = Template.bind({})\\nRED.args = {\\n    active: false,\\n    label: '책과 만나요 단계',\\n};\\nRED.play = async ({ canvasElement }) => {\\n    const canvas = within(canvasElement);\\n    const button = await canvas.getByRole('button');\\n\\n    await expect(canvas.getByText(\\\"책과 만나요 단계\\\")).toBe(button)\\n\\n    await userEvent.click(button);\\n};\\n\\n\\nexport const BLUE = Template.bind({})\\nBLUE.args = {\\n    active: true,\\n    activeType: 'blue',\\n    label: '책과 만나요 단계',\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"RED\":{\"startLoc\":{\"col\":49,\"line\":15},\"endLoc\":{\"col\":79,\"line\":15},\"startBody\":{\"col\":49,\"line\":15},\"endBody\":{\"col\":79,\"line\":15}},\"BLUE\":{\"startLoc\":{\"col\":49,\"line\":15},\"endLoc\":{\"col\":79,\"line\":15},\"startBody\":{\"col\":49,\"line\":15},\"endBody\":{\"col\":79,\"line\":15}}};\n    \nimport React from \"react\";\nimport {Button} from \"./Button\";\nimport {ComponentMeta, ComponentStory} from \"@storybook/react\";\nimport { within, userEvent } from \"@storybook/testing-library\";\nimport { expect } from \"@storybook/jest\"\n\nexport default {\n    title: 'Button/Default',\n    component: Button,\n    argTypes: {\n        onClick: {action: \"clicked\"}\n    }\n} as ComponentMeta<typeof Button>\n\nconst Template : ComponentStory<typeof Button> = (args) => <Button {...args} />\nexport const RED = Template.bind({});\nRED.args = {\n    active: false,\n    label: '책과 만나요 단계',\n};\nRED.play = async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.getByRole('button');\n\n    await expect(canvas.getByText(\"책과 만나요 단계\")).toBe(button)\n\n    await userEvent.click(button);\n};\n\n\nexport const BLUE = Template.bind({});BLUE.args = {\n    active: true,\n    activeType: 'blue',\n    label: '책과 만나요 단계',\n}\n\n\nRED.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...RED.parameters };\nBLUE.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...BLUE.parameters };","import React, {useState,useEffect} from \"react\";\nimport {Composition, Box} from \"atomic-layout\";\n\nimport {StyledButtonWrapper, StyledFont, StyledButton} from \"./styles/button\"\n\ntype Props = {\n    label: string,\n    active?: boolean,\n    activeType?: string,\n    onClick?: () => void,\n    key: number\n}\n\nexport const Button:React.FC<Props> = props => {\n    const [active, setActive] = useState(props.active);\n    const handleClick = (event) => {\n        event.preventDefault();\n        setActive(!active);\n    }\n    return (\n        <StyledButtonWrapper>\n            <StyledFont/>\n            <Box flex justifyContent=\"center\">\n                <StyledButton {...props} active={active} onClick={handleClick}>{props.label}</StyledButton>\n            </Box>\n        </StyledButtonWrapper>\n    )\n}\n\nButton.defaultProps = {\n    active: false,\n    activeType: \"red\",\n    label: \"play\"\n}"],"names":[],"sourceRoot":""}