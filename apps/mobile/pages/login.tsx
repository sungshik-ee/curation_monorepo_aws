import type { NextPage } from 'next';
import { useState, useEffect } from 'react';
import Head from 'next/head';
import { useMutation, useQueryClient } from 'react-query';

import { useAxios } from '@DanbiEduCorp/core/src/axios';

import { LoginForm, FormInput } from '@DanbiEduCorp/ui/stories/forms/LoginForm';

type Auth = {
    id: number;
};

function useAuthenticate() {
    const axios = useAxios();
    return useMutation(
        // TODO : 타입 구체화
        (data: FormInput) =>
            axios.post('/account/auths/authenticate/', data).then((docs) => docs.data)
        // 여기에 catch를 호출하면 mutation에서 onSuccess를 호출함
        // .catch((err) => console.log(err))
    );
}
function useLogin() {
    const axios = useAxios();
    return useMutation((params: Auth) =>
        axios
            .post(`/account/auths/${params.id}/login_actor/`, { actor_type: 4 })
            .then((docs) => docs.data)
    );
}

const Login: NextPage = () => {
    const [auth, setAuth] = useState();
    const queryClient = useQueryClient();
    const authMutation = useAuthenticate();
    const loginMutation = useLogin();

    const onSubmit = (params: FormInput) => {
        // console.log(params);
        authMutation.mutate(params, {
            onSuccess: (data) => {
                // console.log('정상!', data);
                setAuth(data);
                queryClient.setQueryData(['profile', 'auth'], data);
            },
            onError: (err) => {
                console.error('오류!', err);
                setAuth(undefined);
                queryClient.setQueryData(['profile', 'auth'], undefined);
            },
        });
    };

    useEffect(() => {
        if (!auth) {
            return;
        }
        loginMutation.mutate(auth, {
            onSuccess: (data) => {
                queryClient.setQueryData(['profile', 'actor'], data);
            },
            onError: (err) => {
                console.error('오류!', err);
                setAuth(undefined);
                queryClient.setQueryData(['profile', 'auth'], undefined);
                queryClient.setQueryData(['profile', 'actor'], undefined);
            },
        });
    }, [auth]);
    return (
        <>
            <Head>
                <title>Login</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                TEST
                <LoginForm onSubmit={onSubmit} />
            </main>
        </>
    );
};

export default Login;
